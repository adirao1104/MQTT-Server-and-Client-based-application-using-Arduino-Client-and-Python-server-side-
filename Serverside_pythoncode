from datetime import date
import datetime 
import paho.mqtt.client as mqtt
import datetime
import MySQLdb
import json
global ser_dt,x


conn = MySQLdb.connect(host= "localhost",
                  user="root",
                  passwd="",
                  db="dbname")
x = conn.cursor()

# The callback for when the client receives a CONNACK response from the server.
def on_connect(client, userdata, flags, rc):
    #print("Connected with result code "+str(rc))
    
    # Subscribing in on_connect() means that if we lose the connection and
    # reconnect then subscriptions will be renewed.
    client.subscribe("test")
    

# The callback for when a PUBLISH message is received from the server.
def on_message(client, userdata, msg):
    
        value = msg.payload
        
        print value
        s1=value
        ser_dt=str(date.today())
        ser_dt1=str(datetime.datetime.now())
        print s1
       
        
        
    
        try:
            x.execute("""INSERT INTO dbname (sen_val, currentdate, currenttime) VALUES (%s,%s,%s,%s)""",(s1,ser_dt,ser_dt1))
            #conn.commit()
            
                        
        except:
            print "error"
            conn.rollback()
        
        conn.commit()
        
    #conn.close()
    
    


client = mqtt.Client()
client.on_connect = on_connect

client.on_message = on_message

client.connect("localhost", 1883, 60)

# Blocking call that processes network traffic, dispatches callbacks and
# handles reconnecting.
# Other loop*() functions are available that give a threaded interface and a
# manual interface.

client.loop_forever()
